在本地创建一个与github名字相同的repo，之后的步骤是：
echo "# GoEleven" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/lucyyangruo/GoEleven.git
git push -u origin main
——官方指导
## 相关解释
1. 修改文件先add，再commit，再push
2. git branch -M main 的意思是新建一个main分支，然后将本地的操作移动到main上，move，在main上继续执行命令。
3. git remote add origin 的意思是建立一个远程git仓库，并命令为origin，这里的仓库要注意是 http的形式，建议采用ssh的方式，因为之前已经在本地通过ssh的形式进行关联。
这里我就使用了http，所以导致一直没法push。之后通过 git remote -v 查看关联的仓库
通过 git remote set-url origin ssh.. 来修改仓库，再进行push 成功
4. 原来我已经在known_host文件中添加了github的密钥，而昨天进行了重新生成了新的密钥，并与远程相关联，所以一直提示密钥不对，修改步骤：删除旧的主机密钥：ssh-keygen -R github.com ，重新添加新的主机密钥：ssh -T git@github.com  ，之后就可以进行push了。

以上就是我的步骤解释和遇到的问题。

## 修改文件提交到远程
git add --all 
git commit -m "desc"
git push
## 相关解释
1. 这里使用的是git push，而不是上面的git push -u main。-u是设置上游分支，并制定与本地分支的关联关系，upstream，即使上游分支中不存在main，也会关联成功。同 git push -u origin main 相同。
2. 使用git branch -r 查看所有的远程分支

## 39课程：
checksum：Checksum（校验和）是一种用于验证文件完整性的方法。它通过对文件数据进行数学运算生成一个唯一的值，当文件内容发生变化时，这个值也会发生变化。

是一个技术，使用不同数学算法——md5、sha-256等得到的值也称为checksum value
根据文件内容将会生成唯一的值，一般用在网络协议——TCP/IP，或者文件传输协议上——FTP/HTTP。为了确保准确性和安全性

安装go——可以在官网上下载，也可通过homwbrew来安装

## 40课程
安装go
：使用homebrew安装，需配置环境变量，设置GOPATH——在 Go 中，GOPATH 是一个用于存储 Go 项目和依赖包的工作区目录。然而，从 Go 1.11 版本开始，引入了 Go Modules，这改变了 Go 项目的组织和管理方式。
因此我按照默认方式配置go路径，开启强制module管理。设置 GO111MODULE=on 强制启用模块支持：

安装vscode
